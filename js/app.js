"use strict";(function () {    // TODO Module    var app = angular.module('World', ['ngAnimate', 'ngRoute']);        app.config(['$routeProvider', function ($routeProvider) {        $routeProvider            .when('/', {                templateUrl: 'views/home.html',                controller: 'CountriesCtrl'        })            .when('/country/:Code', {                templateUrl: 'views/country.html',                controller: 'CountryCtrl'        })    }]);    // Pagination Factory    app.factory('pagination', function(){       var currentPage,           itemsPerPage = 10,           items = [],            storagePage, // наимаенование хранимого ключа            savePage;   // флаг сохраняемого ключа        return {            // устанавливаем конфигурацию пагинации            setItems: function(data, perPage, prefix = '', storage = true){                items = data;                savePage = storage;                storagePage = prefix + 'Page';                console.log(prefix);                if(localStorage.getItem(storagePage)){                    currentPage = +localStorage.getItem(storagePage);                }else{                    currentPage = 1;                   if(savePage) localStorage.setItem(storagePage, 1);                }                itemsPerPage = angular.isUndefined(perPage) ? itemsPerPage : perPage;                //console.log(itemsPerPage);               // console.log(this.getCountPages());              //  console.log(this.getPaginationList());            },            // количество страниц            getCountPages: function(){                return Math.ceil(items.length / itemsPerPage);            },            // установка новой текущей страницы            setCurrentPage: function(page){              if(savePage)  localStorage.setItem(storagePage, page);                currentPage = page;            },            // метод который получает номера страниц            getPaginationList: function(){                var countPages = this.getCountPages(),                    pagination = [];                if(countPages > 1) {                    for(var i = 1; i <= countPages; i++) {                        pagination.push(i);                    }                }                return pagination;            },            // метод который позволяет получить все необходимые данные для пагинации            getPagination: function(){                return {                    start: (currentPage - 1) * itemsPerPage,                    pagination: this.getPaginationList(),                    currentPage: currentPage,                }            }       };    });    // TODO Controller    app.controller('CountryCtrl', ['$scope', '$http', '$routeParams', 'pagination', function ($scope, $http, $routeParams, pagination) {        $http.post('cities.php', $routeParams).success(function (res) {            $scope.cities = res;            //console.log(res);            $scope.order = 'Code';            $scope.reverse = false;            $scope.perPage = 10;            pagination.setItems(res, $scope.perPage, '', false);            $scope.pagination = pagination.getPagination();            $scope.showCities = function(page){                pagination.setCurrentPage(page);                $scope.pagination = pagination.getPagination();            }        });    }]);    app.controller('CountriesCtrl', ['$scope', '$http', 'orderByFilter', 'pagination', function($scope, $http, orderBy, pagination){        $http.post('countries.php').success(function (res) {           $scope.countries = res;           $scope.order = 'Code';           $scope.reverse = false;           $scope.perPage = 20;           $scope.view = 'table';           pagination.setItems(res, $scope.perPage, 'country');           $scope.pagination = pagination.getPagination();           $scope.showCountries = function(page){               pagination.setCurrentPage(page);               $scope.pagination = pagination.getPagination();           }           //console.log($scope.pagination);            //$scope.countries = orderBy(res, 'Population');            //$scope.page = 1; // текущая страница            /*if(localStorage.getItem('page')){                $scope.page = +localStorage.getItem('page');            }else{                $scope.page = 1;                localStorage.setItem('page', 1);            }            $scope.perPage = 10; // записей на страницу            $scope.countPages  =  Math.ceil($scope.countries.length /$scope.perPage);            //console.log($scope.countPages);            //номер предыдущей страницы            $scope.prevPage = function(){                $scope.page -=1;                localStorage.setItem('page', $scope.page);                return $scope.page;            };            // номер следующей страницы            $scope.nextPage = function() {                $scope.page +=1;                localStorage.setItem('page', $scope.page);                return $scope.page;            };                        // ограничение первой страницы            $scope.firstPage = function () {                return $scope.page == 1;            };            // ограничение последней страницы            $scope.lastPage = function () {                return $scope.page == $scope.countPages;            };            //выборка записей запрошенной страницы            $scope.start = function () {                return($scope.page - 1) * $scope.perPage;            };            //console.log($scope.start);*/        });    }]);})();